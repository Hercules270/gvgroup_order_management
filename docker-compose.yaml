version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: gvgroup_order_management_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: gvgroup_order_management_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gvgroup_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: order_management_zookeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181"
    networks:
      - gvgroup_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: order_management_kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - gvgroup_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: order_management_kafka-ui
    depends_on:
      - kafka
    ports:
      - "8091:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - gvgroup_network

  order-management-app:
    build: .
    container_name: order-management
    depends_on:
      - kafka
      - postgres
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/gvgroup_order_management
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 12345
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI: http://user-management-app:8081
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    networks:
      - gvgroup_network

volumes:
  postgres_data:

networks:
  gvgroup_network:
    name: gvgroup_network